import random
import string

def generate_password(length=12, use_uppercase=True, use_digits=True, use_punctuation=True):
    """Генерирует случайный пароль с заданными параметрами."""
    
    # Начинаем с набора строчных букв
    characters = string.ascii_lowercase
    
    # Добавляем заглавные буквы, если это указано
    if use_uppercase:
        characters += string.ascii_uppercase
    
    # Добавляем цифры, если это указано
    if use_digits:
        characters += string.digits
    
    # Добавляем специальные символы, если это указано
    if use_punctuation:
        characters += string.punctuation
    
    # Проверка на пустой набор символов
    if not characters:
        raise ValueError("Набор символов не может быть пустым.")
    
    # Генерируем случайный пароль
    password = ''.join(random.choice(characters) for _ in range(length))
    
    return password

def get_user_preferences(language):
    """Запрашивает у пользователя предпочтения для генерации пароля на заданном языке."""
    messages = {
        'en': {
            'length': "Enter the desired password length: ",
            'uppercase': "Do you want to use uppercase letters? (yes/no): ",
            'digits': "Do you want to use digits? (yes/no): ",
            'punctuation': "Do you want to use special characters? (yes/no): ",
            'invalid_length': "Please enter a positive integer.",
        },
        'ru': {
            'length': "Введите желаемую длину пароля: ",
            'uppercase': "Использовать заглавные буквы? (да/нет): ",
            'digits': "Использовать цифры? (да/нет): ",
            'punctuation': "Использовать специальные символы? (да/нет): ",
            'invalid_length': "Пожалуйста, введите положительное целое число.",
        },
        'et': {
            'length': "Sisestage soovitud parooli pikkus: ",
            'uppercase': "Kas soovite kasutada suurtähti? (jah/ei): ",
            'digits': "Kas soovite kasutada numbreid? (jah/ei): ",
            'punctuation': "Kas soovite kasutada erimärke? (jah/ei): ",
            'invalid_length': "Palun sisestage positiivne täisarv.",
        }
    }

    while True:
        try:
            length = int(input(messages[language]['length']))
            if length <= 0:
                raise ValueError
            break
        except ValueError:
            print(messages[language]['invalid_length'])
    
    use_uppercase = input(messages[language]['uppercase']).strip().lower() in ('yes', 'да', 'jah')
    use_digits = input(messages[language]['digits']).strip().lower() in ('yes', 'да', 'jah')
    use_punctuation = input(messages[language]['punctuation']).strip().lower() in ('yes', 'да', 'jah')
    
    return length, use_uppercase, use_digits, use_punctuation

def main():
    """Основная функция программы."""
    language_choice = {
        '1': 'en',
        '2': 'ru',
        '3': 'et'
    }

    print("Select language / Выберите язык / Valige keel:")
    print("1: English")
    print("2: Русский")
    print("3: Eesti")

    while True:
        lang = input("Enter the number of your choice / Введите номер вашего выбора / Sisestage oma valiku number: ").strip()
        if lang in language_choice:
            language = language_choice[lang]
            break
        else:
            print("Invalid choice. Please try again. / Неверный выбор. Пожалуйста, попробуйте еще раз. / Vale valik. Palun proovige uuesti.")
    
    messages = {
        'en': "Welcome to the password generator!",
        'ru': "Добро пожаловать в генератор паролей!",
        'et': "Tere tulemast parooligeneraatorisse!"
    }
    
    print(messages[language])
    
    while True:
        # Получаем предпочтения пользователя
        length, use_uppercase, use_digits, use_punctuation = get_user_preferences(language)
        
        try:
            # Генерируем пароль на основе предпочтений пользователя
            generated_password = generate_password(length, use_uppercase, use_digits, use_punctuation)
            print(f"Your password / Ваш пароль / Teie parool: {generated_password}")
        except ValueError as e:
            print(e)
        
        # Спрашиваем пользователя, хочет ли он сгенерировать еще один пароль
        again_messages = {
            'en': "Do you want to generate another password? (yes/no): ",
            'ru': "Хотите сгенерировать еще один пароль? (да/нет): ",
            'et': "Kas soovite luua veel ühe parooli? (jah/ei): "
        }
        again = input(again_messages[language]).strip().lower()
        if again not in ('yes', 'да', 'jah'):
            break

main()
